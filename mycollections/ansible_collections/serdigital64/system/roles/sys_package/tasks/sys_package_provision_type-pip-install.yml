---
- name: "System / Package / Provision / Type: pip / Install / Check required parameters"
  ansible.builtin.assert:
    fail_msg: "Required parameters are missing ({{ sys_package___application }})"
    quiet: true
    that:
      - sys_package___application['packages'] is defined
      - sys_package___application['packages'] | length > 0
      - sys_package___application['packages'][0]['name'] is defined
      - sys_package___application['packages'][0]['name'] | length > 0
      - sys_package___application['options'] is defined
      - sys_package___application['options']['pip'] is defined
      - sys_package___application['options']['pip']['owner'] is defined
      - sys_package___application['options']['pip']['owner'] | length > 0
      - sys_package___application['options']['pip']['group'] is defined
      - sys_package___application['options']['pip']['group'] | length > 0
      - sys_package___application['options']['pip']['path'] is defined
      - sys_package___application['options']['pip']['path'] | length > 0
      - sys_package___application['options']['pip']['cli'] is defined
      - sys_package___application['options']['pip']['cli'] | length > 0

- name: "System / Package / Provision / Type: pip / Install / Upgrade PIP"
  become: true
  ansible.builtin.pip:
    editable: false
    state: "latest"
    name: "{{ sys_package_python_base }}"
    virtualenv: "{{ sys_package___application['options']['pip']['path'] }}"
    virtualenv_command: "{{
      sys_package___application['options']['pip']['python'] | default(sys_repository_base['run']['python']) +
      ' -m venv ' +
      sys_package___application['options']['pip']['system'] | default(false) | ternary('--system-site-packages','')
      }}"

- name: "System / Package / Provision / Type: pip / Install / Install Python modules"
  become: true
  ansible.builtin.pip:
    editable: false
    state: "present"
    name: "{{
      sys_package___application['packages'] |
      map( attribute = 'name' ) |
      list()
      }}"
    virtualenv: "{{ sys_package___application['options']['pip']['path'] }}"
    virtualenv_command: "{{
      sys_package___application['options']['pip']['python'] | default(sys_repository_base['run']['python']) +
      ' -m venv ' +
      sys_package___application['options']['pip']['system'] | default(false) | ternary('--system-site-packages','')
      }}"

- name: "System / Package / Provision / Type: pip / Install / Create application loader"
  become: true
  ansible.builtin.template:
    backup: false
    follow: false
    force: true
    unsafe_writes: false
    mode: "{{ sys_package_base['access']['mode']['exe'] }}"
    src: "{{ sys_package_base['templates']['pip_loader_sh'] }}"
    dest: "{{
      sys_package___application['options']['pip']['path'] + '/' +
      sys_package___application['options']['pip']['cli']
      }}"

- name: "System / Package / Provision / Type: pip / Install / Create location owner"
  vars:
    sys_user:
      setup: true
    sys_user_groups:
      - name: "{{ sys_package___application['options']['pip']['group'] }}"
    sys_user_accounts:
      - name: "{{ sys_package___application['options']['pip']['owner'] }}"
        description: "{{ sys_package_application['name'] + ' application owner' }}"
        group: "{{ sys_package___application['options']['pip']['group'] }}"
  ansible.builtin.include_role:
    name: "serdigital64.system.sys_user"
  when:
    - sys_package___application['options']['pip']['owner'] is defined
    - sys_package___application['options']['pip']['owner'] | length > 0
    - sys_package___application['options']['pip']['owner'] != "root"
    - sys_package___application['options']['pip']['group'] is defined
    - sys_package___application['options']['pip']['group'] | length > 0
    - sys_package___application['options']['pip']['group'] != "root"

- name: "System / Package / Provision / Type: pip / Install / Update location path ownership"
  become: true
  ansible.builtin.file:
    follow: false
    force: false
    unsafe_writes: false
    recurse: false
    state: "directory"
    path: "{{ sys_package___application['options']['pip']['path'] }}"
    owner: "{{ sys_package___application['options']['pip']['owner'] }}"
    group: "{{ sys_package___application['options']['pip']['group'] }}"
    mode: "{{ sys_package_base['access']['mode']['dir'] }}"
  when:
    - sys_package___application['options']['pip']['owner'] is defined
    - sys_package___application['options']['pip']['owner'] | length > 0
    - sys_package___application['options']['pip']['owner'] != "root"
    - sys_package___application['options']['pip']['group'] is defined
    - sys_package___application['options']['pip']['group'] | length > 0
    - sys_package___application['options']['pip']['group'] != "root"
...
