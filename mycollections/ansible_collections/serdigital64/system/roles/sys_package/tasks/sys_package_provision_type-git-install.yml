---
- name: "System / Package / Provision / Type: git / Install / Check required parameters"
  ansible.builtin.assert:
    quiet: true
    that:
      - "'origin' in sys_package___application"
      - sys_package___application['origin'] is not none
      - sys_package___application['origin'] | length > 0
      - "'packages' in sys_package___application"
      - sys_package___application['packages'] is not none
      - sys_package___application['packages'] | length > 0
      - "'file' in sys_package___application['packages'][0]"
      - sys_package___application['packages'][0]['file'] | length > 0
      - "'promotion' in sys_package___application"
      - sys_package___application['promotion'] is not none
      - sys_package___application['promotion'] | length > 0

- name: "System / Package / Provision / Type: git / Install / Prepare App Staging"
  ansible.builtin.include_tasks:
    file: "sys_package_provision_staging_create.yml"

- name: "System / Package / Provision / Type: git / Install / Clone Code (url: {{
    sys_package___application['origin'] + '/' + sys_package___application['packages'][0]['file'] }})"
  become: true
  ansible.builtin.command:
    chdir: "{{ sys_package___application['staging'] }}"
    argv:
      - "{{ sys_repository_base['run']['git'] }}"
      - "clone"
      - "--quiet"
      - "--depth"
      - "1"
      - "--single-branch"
      - "{{
          ( sys_package___application['packages'][0]['git']['branch'] is defined ) |
          ternary(
            '--branch=' + (sys_package___application['packages'][0]['git']['branch'] | default('')),
            '--quiet'
          )
        }}"
      - "{{
          sys_package___application['origin'] + '/' +
          sys_package___application['packages'][0]['file']
        }}"
  register: "sys_package___provision_result"
  changed_when: false

- name: "System / Package / Provision / Type: git / Install / Paths"
  ansible.builtin.include_tasks:
    file: "sys_package_provision_paths.yml"
  when:
    - "'paths' in sys_package___application"
    - sys_package___application['paths'] is not none
    - sys_package___application['paths'] | length > 0

- name: "System / Package / Provision / Type: git / Install / Promote"
  ansible.builtin.include_tasks:
    file: "sys_package_provision_promote.yml"
  loop: "{{ sys_package___application['promotion'] }}"
  loop_control:
    loop_var: "sys_package___provision_promote"
  when:
    - "'promotion' in sys_package___application"
    - sys_package___application['promotion'] is not none
    - sys_package___application['promotion'] | length > 0

- name: "System / Package / Provision / Type: binary / Install / Cleanup Staging"
  ansible.builtin.include_tasks:
    file: "sys_package_provision_staging_remove.yml"
...
