---
auto_aplatform64_platforms:
  - "CentOS8"
  - "RedHat8"
  - "AlmaLinux8"
  - "Rocky8"
  - "OracleLinux8"
  - "OracleLinux9"
  - "Ubuntu20"
  - "Ubuntu21"
  - "Ubuntu22"
  - "Fedora33"
  - "Fedora35"
  - "Fedora36"
  - "Debian10"
  - "Debian11"

# Normalize defaults
auto_aplatform64_paths:
  control:
    root: "{{ auto_aplatform64_paths_control_root }}"
    var: "{{ auto_aplatform64_paths_control_var }}"
  node:
    var: "{{ auto_aplatform64_paths_node_var }}"

auto_aplatform64_owners:
  control:
    user: "{{ auto_aplatform64_owners_control_user }}"
    group: "{{ auto_aplatform64_owners_control_group }}"
  node:
    user: "{{ auto_aplatform64_owners_node_user }}"
    group: "{{ auto_aplatform64_owners_node_group }}"

# Associate roles with host_groups
auto_aplatform64_group_vars: "{{
  auto_aplatform64_group_vars_roles +
  auto_aplatform64_group_vars_playbooks
  }}"

# Define role state templates
auto_aplatform64_group_vars_roles:
  - role: "app_keepassxc"
    host_group: "office_nodes"
    template: "app_keepassxc"
  - role: "app_vscode"
    host_group: "dev_nodes"
    template: "app_vscode"
  - role: "dev_java"
    host_group: "dev_nodes"
    template: "dev_java-dev_nodes"
  - role: "dev_java"
    host_group: "jenkins_controllers"
    template: "dev_java-jenkins_controllers"
  - role: "dev_java"
    host_group: "jenkins_workers"
    template: "dev_java-jenkins_workers"
  - role: "dops_git_client"
    host_group: "dev_nodes"
    template: "dops_git_client"
  - role: "dops_git_server"
    host_group: "git_servers"
    template: "dops_git_server"
  - role: "dops_gitlab_server"
    host_group: "gitlab_servers"
    template: "dops_gitlab_server"
  - role: "dops_jenkins"
    host_group: "jenkins_controllers"
    template: "dops_jenkins"
  - role: "hpv_libvirt_server"
    host_group: "libvirt_servers"
    template: "hpv_libvirt_server"
  - role: "sec_openssh_server"
    host_group: "linux_servers"
    template: "sec_openssh_server-linux_servers"
  - role: "stg_autofs"
    host_group: "linux_servers"
    template: "stg_autofs"
  - role: "stg_autofs"
    host_group: "linux_workstations"
    template: "stg_autofs"
  - role: "stg_repository"
    host_group: "file_servers"
    template: "stg_repository"
  - role: "stg_nfs_server"
    host_group: "file_servers"
    template: "stg_nfs_server"
  - role: "sys_repository"
    host_group: "office_nodes"
    template: "sys_repository-office_nodes"
  - role: "sys_repository"
    host_group: "cloud_control_nodes"
    template: "sys_repository-cloud_control_nodes"
  - role: "sys_repository"
    host_group: "dev_nodes"
    template: "sys_repository-dev_nodes"
  - role: "sys_repository"
    host_group: "gitlab_servers"
    template: "sys_repository-gitlab_servers"
  - role: "sys_repository"
    host_group: "hpc_nodes"
    template: "sys_repository-hpc_nodes"
  - role: "sys_repository"
    host_group: "jenkins_controllers"
    template: "sys_repository-jenkins_controllers"
  - role: "sys_repository"
    host_group: "libvirt_servers"
    template: "sys_repository-libvirt_servers"
  - role: "sys_repository"
    host_group: "linux_servers"
    template: "sys_repository-linux_servers"
  - role: "sys_repository"
    host_group: "linux_workstations"
    template: "sys_repository-linux_workstations"
  - role: "sys_repository"
    host_group: "macos_workstations"
    template: "sys_repository-macos_workstations"
  - role: "sys_repository"
    host_group: "jenkins_workers"
    template: "sys_repository-jenkins_workers"
  - role: "sys_repository"
    host_group: "doc_sites"
    template: "sys_repository-doc_sites"
  - role: "sys_repository"
    host_group: "test_nodes"
    template: "sys_repository-test_nodes"
  - role: "sys_user"
    host_group: "jenkins_workers"
    template: "sys_user-jenkins_workers"
  - role: "sys_sudo"
    host_group: "linux_servers"
    template: "sys_sudo"
  - role: "sys_sudo"
    host_group: "linux_workstations"
    template: "sys_sudo"
  - role: "sys_sudo"
    host_group: "macos_workstations"
    template: "sys_sudo"
  - role: "sys_mc"
    host_group: "linux_servers"
    template: "sys_mc"
  - role: "sys_mc"
    host_group: "linux_workstations"
    template: "sys_mc"
  - role: "sys_mc"
    host_group: "macos_workstations"
    template: "sys_mc"
  - role: "sys_user"
    host_group: "linux_servers"
    template: "sys_user"
  - role: "sys_user"
    host_group: "linux_workstations"
    template: "sys_user"
  - role: "sys_user"
    host_group: "macos_workstations"
    template: "sys_user"
  - role: "sys_shell"
    host_group: "linux_servers"
    template: "sys_shell"
  - role: "sys_shell"
    host_group: "linux_workstations"
    template: "sys_shell"
  - role: "sys_shell"
    host_group: "macos_workstations"
    template: "sys_shell"

# Define playbook state templates
auto_aplatform64_group_vars_playbooks:
  - playbook: "manage_cloud_control_nodes"
    host_group: "cloud_control_nodes"
  - playbook: "manage_db_servers"
    host_group: "db_servers"
  - playbook: "manage_dev_nodes"
    host_group: "dev_nodes"
  - playbook: "manage_doc_sites"
    host_group: "doc_sites"
  - playbook: "manage_git_servers"
    host_group: "git_servers"
  - playbook: "manage_gitlab_servers"
    host_group: "gitlab_servers"
  - playbook: "manage_file_servers"
    host_group: "file_servers"
  - playbook: "manage_hpc_nodes"
    host_group: "hpc_nodes"
  - playbook: "manage_jenkins_controllers"
    host_group: "jenkins_controllers"
  - playbook: "manage_jenkins_workers"
    host_group: "jenkins_workers"
  - playbook: "manage_libvirt_servers"
    host_group: "libvirt_servers"
  - playbook: "manage_linux_servers"
    host_group: "linux_servers"
  - playbook: "manage_linux_workstations"
    host_group: "linux_workstations"
  - playbook: "manage_macos_workstations"
    host_group: "macos_workstations"
  - playbook: "manage_office_nodes"
    host_group: "office_nodes"
  - playbook: "manage_test_nodes"
    host_group: "test_nodes"

# Declare playbooks
auto_aplatform64_playbooks:
  - playbook: "hello_world"
    inventory: "aplatform64_service"
    group: "aplatform64_servers"
    info: "Test Ansible Deployment"
  - playbook: "manage_aplatform64_servers"
    inventory: "aplatform64_service"
    group: "aplatform64_servers"
    info: "Manage A:Platform64 servers"
  - playbook: "manage_aplatform64_nodes"
    inventory: "aplatform64_service"
    group: "aplatform64_nodes"
    info: "Manage A:Platform64 nodes"
  - playbook: "manage_db_servers"
    inventory: "db_service"
    group: "db_servers"
    info: "Manage db servers"
  - playbook: "manage_cloud_control_nodes"
    inventory: "cloud_control_nodes"
    group: "cloud_control_nodes"
    info: "Provision public cloud management tools"
  - playbook: "manage_dev_nodes"
    inventory: "dev_nodes"
    group: "dev_nodes"
    info: "Provision software development environments"
  - playbook: "manage_doc_sites"
    inventory: "doc_sites"
    group: "doc_sites"
    info: "Provision documentation site management tools"
  - playbook: "manage_file_servers"
    inventory: "file_service"
    group: "file_servers"
    info: "Manage file servers"
  - playbook: "manage_git_servers"
    inventory: "git_service"
    group: "git_servers"
    info: "Manage GIT servers"
  - playbook: "manage_gitlab_servers"
    inventory: "gitlab_service"
    group: "gitlab_servers"
    info: "Manage GitLab servers"
  - playbook: "manage_hpc_nodes"
    inventory: "hpc_nodes"
    group: "hpc_nodes"
    info: "Provision high-performance computing environments"
  - playbook: "manage_jenkins_controllers"
    inventory: "jenkins_service"
    group: "jenkins_controllers"
    info: "Manage Jenkins controllers"
  - playbook: "manage_jenkins_workers"
    inventory: "jenkins_service"
    group: "jenkins_workers"
    info: "Manage Jenkins workers"
  - playbook: "manage_libvirt_servers"
    inventory: "libvirt_service"
    group: "libvirt_servers"
    info: "Manage LibVirt servers"
  - playbook: "manage_linux_servers"
    inventory: "linux_servers"
    group: "linux_servers"
    info: "Manage Linux Servers"
  - playbook: "manage_linux_workstations"
    inventory: "linux_workstations"
    group: "linux_workstations"
    info: "Manage Linux Workstations"
  - playbook: "manage_macos_workstations"
    inventory: "macos_workstations"
    group: "macos_workstations"
    info: "Manage MacOS Workstations"
  - playbook: "manage_office_nodes"
    inventory: "office_nodes"
    group: "office_nodes"
    info: "Provision office productivity applications"
  - playbook: "manage_test_nodes"
    inventory: "test_nodes"
    group: "test_nodes"
    info: "Provision software testing tools"

# Declare host groups
auto_aplatform64_host_groups:
  - "aplatform64_servers"
  - "aplatform64_nodes"
  - "cloud_control_nodes"
  - "db_servers"
  - "dev_nodes"
  - "doc_sites"
  - "file_servers"
  - "git_servers"
  - "gitlab_servers"
  - "hpc_nodes"
  - "jenkins_controllers"
  - "jenkins_workers"
  - "libvirt_servers"
  - "linux_servers"
  - "linux_workstations"
  - "macos_workstations"
  - "office_nodes"
  - "test_nodes"

# Declare inventories
auto_aplatform64_inventories:
  - "aplatform64_service"
  - "cloud_control_nodes"
  - "db_service"
  - "dev_nodes"
  - "doc_sites"
  - "git_service"
  - "gitlab_service"
  - "file_service"
  - "hpc_nodes"
  - "jenkins_service"
  - "libvirt_service"
  - "linux_servers"
  - "linux_workstations"
  - "macos_workstations"
  - "office_nodes"
  - "test_nodes"

auto_platform64_managed_file: "Warning: This file is automatically generated by the Ansible Role: serdigital64.automation.auto_aplatform64. Do not modify."

auto_aplatform64___path_status: ~
auto_aplatform64___provision_record: ~
auto_aplatform64___setup_extension: ~
# auto_aplatform64___prepare_path_inventory: ~
# auto_aplatform64___prepare_path_var: ~
# auto_aplatform64___prepare_path_etc: ~
# auto_aplatform64___prepare_path_file: ~
# auto_aplatform64___provision_playbook: ~
# auto_aplatform64___setup_lib: ~
# auto_aplatform64___setup_group_play: ~
# auto_aplatform64___setup_group_role: ~
# auto_aplatform64___prepare_path_host: ~
# auto_aplatform64___setup_inventory: ~
...
