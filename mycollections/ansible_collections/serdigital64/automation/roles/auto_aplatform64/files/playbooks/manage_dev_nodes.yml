---
- name: "Manage Dev Nodes"
  hosts: "dev_nodes"
  gather_facts: false

  pre_tasks:
    - name: "Manage Dev Nodes / Discover Target Platform"
      ansible.builtin.setup:
        gather_subset: "min"

    - name: "Manage Dev Nodes / Initialize global variables"
      ansible.builtin.set_fact:
        manage_dev_nodes_yum_distro: "
          {%- if (ansible_distribution == 'CentOS') or
                  (ansible_distribution == 'OracleLinux')
          -%}
            {{ 'RHEL' }}
          {%- elif (ansible_distribution == 'Fedora') -%}
            {{ 'fedora' }}
          {%- endif -%}
          "
        manage_dev_nodes_deb_distro: "{{ ansible_facts['distribution_release'] | default('focal') }}"
        manage_dev_nodes_catalog_distro: "
          {%- if (ansible_distribution == 'CentOS') or
                  (ansible_distribution == 'OracleLinux')
          -%}
            { 'epel': true }
          {%- elif (ansible_distribution == 'Fedora') -%}
            { 'updates': true }
          {%- else -%}
            {}
          {%- endif -%}
          "

    - name: "Manage Dev Nodes / Prepare package repositories"
      vars:
        sys_repository:
          prepare: true
          deploy: true
          setup: true
          provision: true
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_repository"

    - name: "Manage Dev Nodes / Prepare archive manager"
      vars:
        bkp_archive:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.backup.bkp_archive"

    - name: "Manage Dev Nodes / Prepare package installer"
      vars:
        sys_package:
          prepare: true
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"

  tasks:
    - name: "Manage Dev Nodes / Provision common development tools"
      vars:
        dev_tools:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_tools"
      when:
        - dev_nodes_apps['tools'] is defined
        - dev_nodes_apps['tools']

    - name: "Manage Dev Nodes / Provision GIT client"
      vars:
        dops_git_client:
          deploy: true
          setup: true
          provision: true
      ansible.builtin.include_role:
        name: "serdigital64.devops.dops_git_client"
      when:
        - dev_nodes_apps['git_client'] is defined
        - dev_nodes_apps['git_client']

    - name: "Manage Dev Nodes / Provision GitHUB CLI"
      vars:
        dops_github_cli:
          deploy: true
          setup: true
          provision: true
      ansible.builtin.include_role:
        name: "serdigital64.devops.dops_github_cli"
      when:
        - dev_nodes_apps['github_cli'] is defined
        - dev_nodes_apps['github_cli']

    - name: "Manage Dev Nodes / Provision GCC development environment"
      vars:
        dev_gcc:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_gcc"
      when:
        - dev_nodes_apps['gcc'] is defined
        - dev_nodes_apps['gcc']

    - name: "Manage Dev Nodes / Provision Ruby development environment"
      vars:
        dev_ruby:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_ruby"
      when:
        - dev_nodes_apps['ruby'] is defined
        - dev_nodes_apps['ruby']

    - name: "Manage Dev Nodes / Provision Java development environment"
      vars:
        dev_java:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_java"
      when:
        - dev_nodes_apps['java'] is defined
        - dev_nodes_apps['java']

    - name: "Manage Dev Nodes / Provision Python development environment"
      vars:
        dev_python:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_python"
      when:
        - dev_nodes_apps['python'] is defined
        - dev_nodes_apps['python']

    - name: "Manage Dev Nodes / Provision NodeJS development environment"
      vars:
        dev_nodejs:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.development.dev_nodejs"
      when:
        - dev_nodes_apps['nodejs'] is defined
        - dev_nodes_apps['nodejs']

    - name: "Manage Dev Nodes / Provision Vagrant tool"
      vars:
        infra_vagrant:
          deploy: true
      ansible.builtin.include_role:
        name: "serdigital64.infrastructure.infra_vagrant"
      when:
        - dev_nodes_apps['vagrant'] is defined
        - dev_nodes_apps['vagrant']

    - name: "Manage Dev Nodes / Provision VSCode IDE"
      vars:
        app_vscode:
          deploy: true
          setup: true
      ansible.builtin.include_role:
        name: "serdigital64.application.app_vscode"
      when:
        - dev_nodes_apps['vscode'] is defined
        - dev_nodes_apps['vscode']
...
