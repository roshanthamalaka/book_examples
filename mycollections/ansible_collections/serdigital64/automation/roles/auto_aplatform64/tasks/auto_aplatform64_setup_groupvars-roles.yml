---
- name: "Automation / A:Platform64 / Setup / GroupVars / Roles / Load dependencies: auto_ansible_node"
  ansible.builtin.include_role:
    name: "serdigital64.automation.auto_ansible_node"
    public: true

- name: "Automation / A:Platform64 / Setup / GroupVars / Roles / Load dependencies: app_vscode"
  ansible.builtin.include_role:
    name: "serdigital64.application.app_vscode"
    public: true

- name: "Automation / A:Platform64 / Setup / GroupVars / Roles / Create default settings"
  become: true
  ansible.builtin.template:
    backup: false
    follow: false
    force: true
    unsafe_writes: false
    owner: "{{ auto_ansible_control_base['access']['user']['owner'] }}"
    group: "{{ auto_ansible_control_base['access']['group']['owner'] }}"
    mode: "{{ auto_ansible_control_base['access']['mode']['file'] }}"
    src: "{{
      auto_aplatform64_base['templates']['roles'] + '/' +
      auto_aplatform64___setup_group_role['template'] + '.yml.j2'
      }}"
    dest: "{{
      auto_ansible_control_base['paths']['site_group_vars'] +
      '/' + auto_aplatform64___setup_group_role['host_group'] +
      '/' + auto_aplatform64___setup_group_role['role'] + '.yml'
      }}"
  loop: "{{ auto_aplatform64_group_vars }}"
  loop_control:
    loop_var: "auto_aplatform64___setup_group_role"
  when:
    - auto_aplatform64___setup_group_role['role'] is defined
...
