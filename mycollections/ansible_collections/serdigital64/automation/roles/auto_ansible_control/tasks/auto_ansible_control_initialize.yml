---
- name: "Automation / Ansible / Control / Initialize / Check Platform compatibility ({{
    ansible_distribution + ansible_distribution_major_version }})"
  ansible.builtin.assert:
    quiet: true
    fail_msg: "Target Platform not supported: {{ ansible_distribution + ansible_distribution_major_version }}"
    that:
      - ansible_distribution + ansible_distribution_major_version in auto_ansible_control_platforms

- name: "Automation / Ansible / Control / Initialize / Check required parameters"
  ansible.builtin.assert:
    fail_msg: "required parameters are missing ({{
      auto_ansible_control_site | default('auto_ansible_control_site') }} ' / ' {{
      auto_ansible_control_owners | default('auto_ansible_control_owners') }} ' / ' {{
      auto_ansible_control_paths | default('auto_ansible_control_paths')
      }})"
    quiet: true
    that:
      - auto_ansible_control_site is defined
      - auto_ansible_control_owners is defined
      - auto_ansible_control_owners['control']['user'] is defined
      - auto_ansible_control_owners['control']['user'] | length > 0
      - auto_ansible_control_owners['control']['group'] is defined
      - auto_ansible_control_owners['control']['group'] | length > 0
      - auto_ansible_control_paths is defined
      - auto_ansible_control_paths['root'] is defined
      - auto_ansible_control_paths['root'] | length > 0
      - auto_ansible_control_paths['var'] is defined
      - auto_ansible_control_paths['var'] | length > 0

- name: "Automation / Ansible / Control / Initialize / Resolve prerequisites"
  ansible.builtin.include_tasks:
    file: "auto_ansible_control_prerequisite.yml"
  when:
    - "'resolve_prereq' in auto_ansible_control"
    - auto_ansible_control['resolve_prereq']
...
